<?php
// $Id$

/**
 * @file
 * A module integrating DEA Master Calendar with Drupal.
 *
 * This module provides a block with an events stream and a page that displays the same events in a calendar format. 
 * 
 */

 //sets a couple default values

//these will be removed at a later date
define('MASTERCAL_ID', 62);
define('MASTERCAL_AUTH', False);




 
/**
 * Implements hook_help().
 */
function mastercal_help($path, $arg) {
  if ($path == 'admin/help#mastercal') {
    return t('A module to display Calendar data from Master Calendar.');
  }
}

/**
 * Implements hook_permission().
 * - The option to give this permission will show up under Mastercal in the permissions page
 */
function mastercal_permission() {
  return array(
    'administer mastercal' => array(
      'title' => t('Administer mastercal'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function mastercal_menu() {
  $items = array();
  

  //path to config
    $items['admin/config/user-interface/mastercal'] = array(
    'title' => 'Calendars',
    'description' => 'Add and modify Calendar sets.',
    'page callback' => 'mastercal_set_admin',
    'access arguments' => array('administer mastercal'),
    'file' => 'mastercal.admin.inc',
  );
  //callback url for adding a new calendar
  //the function mastercal_set_add_form() in the admin.inc file provides the form
  $items['admin/config/user-interface/mastercal/add-set'] = array(
    'title' => 'Add calendar set',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mastercal_set_add_form'),
    'access arguments' => array('administer mastercal'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'mastercal.admin.inc',
  );
  //passes the calendar id of the item you are trying to remove
  //the access callback should be changed to be more restrictive
  $items['admin/config/user-interface/mastercal/%/delete'] = array(
    'title' => 'Delete shortcut set',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mastercal_set_delete_form', 4),
    'access callback' => True,
    'access arguments' => array(4),
    'file' => 'mastercal.admin.inc',
  );
  
  //path to page view
  $items['org/calendar'] = array(
    'title' => 'Calendar',
    'page callback' => 'mastercal_pageview',
    'access callback' => TRUE,
  );
  return $items;
}

function mastercal_cron() {
  if (variable_get('MASTERCAL_AUTH')) {
  //initialize an instance of the mastercalSOAP class then call the GetEvents() method
  //the calednars being queried for the events list are loaded from the database
    $events = client()->GetEvents();
    //dprint_r($events);
    //initialize the JSON string so I can append to it later
    //there may be a better way to create thsi JSON
    $nodes = array(
      'saved' => 0,
      'passed' => 0
    );
    $widgetData  = '';
    foreach($events as $id => $event) {
      $cid = $id;
      $contact_name = $event['ContactName'];
      $contact_email = $event['ContactEmail'];
      
      
      $event_loc = (!empty($event['Location'])) ? $event['Location'] : null;
      $event_loc_url = (!empty($event['LocationURL'])) ? $event['LocationURL'] : null;
      
      $node = new StdClass();
      $node->type = 'node_event';
      $node->language = LANGUAGE_NONE;
      node_object_prepare($node);
      $node->title = $event['Title'];
      $node->body['und'][0]['value'] = $event['Description'];
      $node->field_event_cid['und'][0]['value'] = $cid;
      $node->field_event_contact['und'][0]['value'] = $contact_name;
      $n_dates = count($event['EventDate']);
      if ($n_dates > 1) {
        //dprint_r('more');
        $count = 0;
        foreach ($event['EventDate'] as $day) {
          //dprint_r($day);
          $date = explode('T', $day['Date']);
          $time = explode('-',$date[1]);
          $datetime = $date[0] . ' ' . $time[0];
          $node->field_event_date['und'][$count]['value'] = $datetime;
          $node->field_event_date['und'][$count]['value2'] = $datetime;
          //dprint_r($count);
          $count += 1;
        }
      } else {
        //dprint_r($event['EventDate']);
        $date = explode('T', $event['EventDate'][0]['Date']);
        $time = explode('-',$date[1]);
        $datetime = $date[0] . ' ' . $time[0];
        $node->field_event_date['und'][0]['value'] = $datetime;
        $node->field_event_date['und'][0]['value2'] = $datetime;

      }
      #dprint_r($datetime);
      
      $node->field_event_location['und'][0]['value'] = $event_loc;
      if (!empty($event_loc_url)) {
        $node->field_event_url['und'][0]['value'] = $event_loc_url;
      }
      
      $query = new EntityFieldQuery;
      $result = $query
        ->entityCondition('entity_type', 'node')
        ->propertyCondition('type', 'node_event')
        ->fieldCondition('field_event_cid', 'value', $cid, '=')
        ->execute();
      //dprint_r($result);
      if (empty($result)) {
        node_submit($node);
        node_save($node);
        $nodes['saved'] += 1;
      }else {
        $nodes['passed'] += 1;
      }


    }

    drupal_set_message(t("@saved nodes created, @pass events skipped.", array(
      '@saved' => $nodes['saved'], 
      '@pass' => $nodes['passed'])
      ) 
    );

  }
  
}

/**
 * Function to create page view
 *
 * Currently this page can be accessed at example.com/org/calendar
 */
function mastercal_pageview() {
  //This condition was to make sure a calendar has been added and the soapclient
  //successfully intialized but will be phased out soon

  $widgetData  = '';
   
      
  $result = db_query("SELECT nid FROM {node} WHERE type = :type", array(
    ':type' => 'node_event',
  ));
  //dprint_r($result);
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  // http://api.drupal.org/api/function/node_delete_multiple/7
  if (!empty($nids)) {
    $nodes = node_load_multiple($nids);
  
    foreach($nodes as $node) {
      foreach($node->field_event_date as $date) {
        //dprint_r($date);
        $widgetData .= "{title:'".substr($node->title, 0, 50)."',start:'".$date[0]['value']."'},";
      }
    }
  }else {
    if (user_access('administer modules')){
      drupal_set_message("No Events found - Please " . l('configure', 'admin/config/user-interface/mastercal',array('attributes' => array('class' => 'to-overlay'))) . " then " . l('run cron', 'admin/config/system/cron',array('attributes' => array('class' => 'to-overlay'))), $type = 'warning');
    }
  }
    //$calendars = client()->GetCals();
    //adds a failry commonplace jquery library initializing statement and adds our event data in teh middle
    drupal_add_js(
      '(function($){jQuery(document).ready(function () { 
        $("#mastercal_page").fullCalendar({
        events: [' . $widgetData . ']
        }) });})(jQuery);', 
        array('type' => 'inline', 'scope' => 'header', 'weight' => 5)
    );   
    //print_r($calendars);
  
    return array(
      'calendar' => array(
          '#markup' => 'Calendar',
          '#prefix' => '<div id="mastercal_page">',
          '#suffix' => '</div>',
      ),
    );

  
}







function client() {
  require_once('mastercal_class.inc');
  $client = new mastercalSOAP();
    
  return $client;
}




function cal_exists($cid) {
  return (bool) db_query_range('SELECT 1 FROM {mastercal_source} WHERE cid = :cid', 0, 1, array(':cid' => $cid))->fetchField();
}

function mastercal_save(&$cal) {
  // Save the calendar ID and its name to teh database
 $return = db_insert('mastercal_source')
            ->fields(array(
                'title' => $cal['Name'],
                'cid' => (int)$cal['CalendarID'],
              )
            )
            ->execute();
  return $return;
}

function mastercal_load() {
//for simple queries it is more economical to use db_query and SQL than to use the new Drupal 7 methods
  $result = db_query("SELECT title, cid FROM {mastercal_source}");
  return $result;
}
function mastercal_delete($cid) {
  $deleted = db_delete('mastercal_source')
  ->condition('cid', $cid)
  ->execute();
  return $deleted;
}

